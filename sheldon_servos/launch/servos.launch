<!-- Joint controller for all servos -->

<launch>
  <node name="dynamixel_manager" pkg="dynamixel_controllers" type="controller_manager.py" required="true" output="screen">
    <rosparam>
      namespace: robot_dynamixel_manager
      serial_ports:
        dynamixel_port:
            port_name: "/dev/dynamixel"
            baud_rate: 1000000
            min_motor_id: 2
            max_motor_id: 19
            update_rate: 10 
    </rosparam>
  </node>
 
  <!-- Start joint controllers -->  
  <rosparam file="$(find sheldon_servos)/config/dynamixel_params.yaml" command="load"/>

  <node name="dynamixel_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
        args="--manager=robot_dynamixel_manager
              --port=dynamixel_port

        head_sidetilt_joint 
        head_tilt_joint 
        head_pan_joint

        chest_camera_tilt_joint

        right_arm_shoulder_rotate_joint
        right_arm_shoulder_lift_joint
        right_arm_elbow_rotate_joint
        right_arm_elbow_bend_joint
        right_arm_wrist_rotate_joint
        right_arm_wrist_bend_joint
        right_arm_gripper_finger_joint

        left_arm_shoulder_rotate_joint
        left_arm_shoulder_lift_joint
        left_arm_elbow_rotate_joint
        left_arm_elbow_bend_joint
        left_arm_wrist_bend_joint
        left_arm_wrist_rotate_joint
        left_arm_gripper_finger_joint
        "
        output="screen" />

  <!-- Start head joints trajectory controller -->
    <rosparam file="$(find sheldon_servos)/config/head_trajectory_controller.yaml" command="load"/>
    <node name="head_controller_spawner_meta" pkg="dynamixel_controllers" type="controller_spawner.py"
        args="--manager=robot_dynamixel_manager
                --type=meta

          head_controller
            head_sidetilt_joint
            head_pan_joint
            head_tilt_joint
          "
        output="screen"/>

  <!-- Start right arm joints trajectory controller -->
    <rosparam file="$(find sheldon_servos)/config/right_arm_trajectory_controller.yaml" command="load"/>
    <node name="right_arm_controller_spawner_meta" pkg="dynamixel_controllers" type="controller_spawner.py"
        args="--manager=robot_dynamixel_manager
                --type=meta

          right_arm_controller
            right_arm_shoulder_rotate_joint
            right_arm_shoulder_lift_joint
            right_arm_elbow_rotate_joint
            right_arm_elbow_bend_joint
            right_arm_wrist_bend_joint
            right_arm_wrist_rotate_joint
          "
        output="screen"/>

  <!-- Start left arm joints trajectory controller -->
    <rosparam file="$(find sheldon_servos)/config/left_arm_trajectory_controller.yaml" command="load"/>
    <node name="left_arm_controller_spawner_meta" pkg="dynamixel_controllers" type="controller_spawner.py"
        args="--manager=robot_dynamixel_manager
                --type=meta

          left_arm_controller
            left_arm_shoulder_rotate_joint
            left_arm_shoulder_lift_joint
            left_arm_elbow_rotate_joint
            left_arm_elbow_bend_joint
            left_arm_wrist_bend_joint
            left_arm_wrist_rotate_joint
          "
        output="screen"/>

   <!-- Run a separate controller for each of the grippers. (From the arbitix controller package, as 
   the dynamixel_controller package does not have a gripper controller (needed by Moveit) -->

   <node name="right_gripper_controller" pkg="arbotix_controllers" type="gripper_controller" output="screen">
      <rosparam>
         model: parallel
         invert: false
         center: 1.0
         pad_width: 0.004
         finger_length: 0.065
         min_opening: 0.0
         max_opening: 2.5
         joint: right_arm_gripper_finger_joint
      </rosparam>
   </node>

   <node name="left_gripper_controller" pkg="arbotix_controllers" type="gripper_controller" output="screen">
      <rosparam>
         model: parallel
         invert: false
         center: 1.0
         pad_width: 0.004
         finger_length: 0.065
         min_opening: 0.0
         max_opening: 2.5
         joint: left_arm_gripper_finger_joint
      </rosparam>
   </node>

   <!-- Waist Joint State Publisher - 
        NO LONGER USED - Arduino publishes joint_state message directly!
        <node name="waist_joint_state_publisher" pkg="sheldon_servos"
        type="waist_joint_state_publisher.py" output="screen" />
   -->
 
   <!-- Publish position, velocity, and effort for each servo -->
   <node name="dynamixel_joint_state_publisher" pkg="sheldon_servos" type="dynamixel_joint_state_publisher.py" output="screen" />

   <!-- Provide consolidation service that provides current status of all joints
        (dynamixel_joint_state_publisher and knee/hip joints are published randomly
        this consolidates all the info for joint motion control.  not used for moveit.  -->
   <node name="joint_states_service" pkg="sheldon_servos" type="joint_states_service.py" output="screen" />

   <node name="joy_to_dynamixel" pkg="sheldon_servos" type="joy_to_dynamixel.py" output="screen"/>

</launch>

